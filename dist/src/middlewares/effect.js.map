{"version":3,"file":"effect.js","sourceRoot":"","sources":["../../../src/middlewares/effect.ts"],"names":[],"mappings":";;;AAEA,MAAa,WAAW;IACtB,YAAoB,cAA4B,EAAE;QAA9B,gBAAW,GAAX,WAAW,CAAmB;IAAG,CAAC;IAEtD,IAAI,UAAU;QACZ,OAAO,CAAC,KAA6C,EAAE,EAAE;YACvD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,EAAE;gBAChD,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;oBAC1B,IAAI,QAAQ,EAAE;wBACZ,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;qBACxB;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,IAA2B,EAAE,EAAE,CAAC,CAAC,MAAc,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3E,CAAC,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,UAAsB;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;CACF;AApBD,kCAoBC","sourcesContent":["import { SideEffect, Action } from './../interfaces';\n\nexport class SideEffects {\n  constructor(private sideEffects: SideEffect[] = []) {}\n\n  get middleware() {\n    return (store: { dispatch: (action: Action) => void }) => {\n      this.sideEffects.forEach(({ effect, dispatch }) => {\n        effect.subscribe((action) => {\n          if (dispatch) {\n            store.dispatch(action);\n          }\n        });\n      });\n\n      return (next: (arg: Action) => void) => (action: Action) => next(action);\n    };\n  }\n\n  add(sideEffect: SideEffect) {\n    this.sideEffects.push(sideEffect);\n  }\n}\n"]}