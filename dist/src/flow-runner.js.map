{"version":3,"file":"flow-runner.js","sourceRoot":"","sources":["../../src/flow-runner.ts"],"names":[],"mappings":"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","sourcesContent":["import { validateCondition } from './condition-functions';\nimport { Observable, BehaviorSubject, switchMap, filter, take, map, tap, mergeMap, of, takeUntil, Subject } from 'rxjs';\nimport { Action, ConditionObject, Config } from './interfaces';\n\nconst generateId = () =>\n  `${Date.now()}${Array.from({ length: 7 }, () => String(Math.floor(Math.random() * 10))).join('')}`;\n\nconst getEndActionForFlow = (type: string) => `${type} End`;\n\nconst START_FLOW_ACTION_TYPE = '__START_RUN_FLOW__';\nconst FINISH_FLOW_ACTION_TYPE = '__FINISH_RUN_FLOW__';\n\nconst FORCE_FINISH_FLOW = '__FORCE_FINISH_FLOW__';\nconst FORCE_FINISH_FLOW_END = getEndActionForFlow(FORCE_FINISH_FLOW);\n\nconst RUN_FLOW_IN_SCOPE = '__RUN_FLOW_IN_SCOPE__';\nconst RUN_FLOW_IN_SCOPE_END = getEndActionForFlow(RUN_FLOW_IN_SCOPE);\n\nconst RUN_CONDITION_FLOW = '__RUN_CONDITION_FLOW__';\nconst RUN_CONDITION_FLOW_END = getEndActionForFlow(RUN_CONDITION_FLOW);\n\nconst RUN_REPEATED_FLOW = '__RUN_REPEATED_FLOW__';\nconst RUN_REPEATED_FLOW_END = getEndActionForFlow(RUN_REPEATED_FLOW);\n\nconst RUN_DYNAMIC_ACTION = '__RUN_DYNAMIC_ACTION__';\nconst RUN_DYNAMIC_ACTION_END = getEndActionForFlow(RUN_DYNAMIC_ACTION);\n\nconst flowIsRunning$ = new BehaviorSubject<string[]>([]);\n\nexport type FlowRunner = <T>(actions: Action[], context?: T) => Observable<T>;\n\nconst buildNestedFlow = <T>({\n  relatedAction,\n  actions,\n  actions$,\n  dispatch,\n  prefix,\n  buildFlowFn,\n  flowTag,\n  context,\n  finishParentFlow,\n  config,\n}: {\n  relatedAction: Action;\n  actions: Action[];\n  actions$: Observable<Action>;\n  dispatch: (_: Action) => void;\n  prefix: string;\n  buildFlowFn: (obj: any) => Observable<any>;\n  flowTag?: string;\n  context: T;\n  config?: {\n    data: Config;\n  };\n  finishParentFlow: (input: { tag?: string; context?: T; stopNestedFlows?: () => void }) => void;\n}) => {\n  const nestedFlowId = generateId();\n\n  Promise.resolve().then(() => {\n    buildFlowFn({\n      id: nestedFlowId,\n      actions,\n      actions$,\n      dispatch,\n      context,\n      prefix,\n      flowTag,\n      finishParentFlow: finishParentFlow || relatedAction.finishFlow,\n      config,\n    }).subscribe();\n  });\n\n  return actions$.pipe(\n    filter((action) => action.type === `${prefix} ${FINISH_FLOW_ACTION_TYPE}`),\n    filter(({ id }) => id === nestedFlowId),\n    take(1),\n    map(({ context }) => ({ context, id: relatedAction.id })),\n  );\n};\n\nconst buildNestedRepeatedFlow = <T>({\n  relatedAction,\n  actions,\n  actions$,\n  dispatch,\n  prefix,\n  buildFlowFn,\n  flowTag,\n  context,\n  times,\n  conditionToRepeat,\n  finishParentFlow,\n  config,\n}: {\n  relatedAction: Action;\n  actions: Action[];\n  actions$: Observable<Action>;\n  dispatch: (_: Action) => void;\n  prefix: string;\n  buildFlowFn: (obj: any) => Observable<any>;\n  flowTag?: string;\n  context: T;\n  times?: number;\n  conditionToRepeat?: ConditionObject<T>;\n  finishParentFlow: (input: { tag?: string; context?: T; stopNestedFlows?: () => void }) => void;\n  config?: {\n    data: Config;\n  };\n}) => {\n  let currentContext = context;\n  let count = 0;\n\n  const finishRepeatedFlow$ = new Subject<T>();\n\n  const finishRepeatedFlow = ({\n    tag,\n    context = {} as T,\n    stopNestedFlows = () => {},\n  }: {\n    tag?: string;\n    context: T;\n    stopNestedFlows?: () => void;\n  }) => {\n    if (tag === undefined || tag === flowTag) {\n      finishRepeatedFlow$.next(context);\n\n      stopNestedFlows();\n      return;\n    }\n\n    if (tag) {\n      finishParentFlow({\n        tag,\n        context,\n        stopNestedFlows: () => {\n          finishRepeatedFlow$.next(context);\n          stopNestedFlows();\n        },\n      });\n    }\n  };\n\n  const runRepeatedFlow = () => {\n    return of({}).pipe(\n      map(() => {\n        if (typeof times === 'number' && times > 0) {\n          return count !== times;\n        }\n        if (!conditionToRepeat) {\n          return false;\n        }\n        return validateCondition({\n          condition:\n            typeof conditionToRepeat !== 'string'\n              ? conditionToRepeat\n              : config?.data?.conditionsMap?.[conditionToRepeat],\n          globalContext: currentContext,\n        });\n      }),\n      tap((shouldRepead) => {\n        if (!shouldRepead) {\n          finishRepeatedFlow({ context: currentContext });\n        }\n      }),\n      filter(Boolean),\n      switchMap(() =>\n        buildNestedFlow({\n          relatedAction,\n          actions,\n          actions$,\n          dispatch,\n          prefix,\n          buildFlowFn,\n          context: currentContext,\n          finishParentFlow: finishRepeatedFlow,\n          config,\n        }),\n      ),\n      tap(({ context }) => {\n        count++;\n        currentContext = context;\n      }),\n      switchMap(() => runRepeatedFlow()),\n    );\n  };\n\n  Promise.resolve().then(() => {\n    runRepeatedFlow()\n      .pipe(takeUntil(finishRepeatedFlow$.pipe(take(1))))\n      .subscribe();\n  });\n\n  return finishRepeatedFlow$.pipe(take(1));\n};\n\nconst buildFlow = <T>({\n  id = generateId(),\n  actions: actionsFromPayload,\n  actions$,\n  dispatch,\n  context,\n  prefix,\n  flowTag,\n  finishParentFlow = () => {},\n  config,\n}: {\n  id?: string;\n  actions: Action[];\n  actions$: Observable<Action>;\n  dispatch: (_: Action) => void;\n  context: T;\n  prefix: string;\n  flowTag?: string;\n  finishParentFlow?: (input: { tag?: string; context?: T; stopNestedFlows?: () => void }) => void;\n  config?: {\n    data: Config;\n  };\n}) => {\n  const actions: Action[] = Array.isArray(actionsFromPayload)\n    ? actionsFromPayload\n    : config?.data?.flowsMap?.[actionsFromPayload];\n\n  if (actions.length === 0) {\n    return of(null);\n  }\n\n  const currentAction = actions[0];\n\n  const finishFlow$ = new Subject<void>();\n\n  const finishFlow = ({\n    tag,\n    context = {} as T,\n    stopNestedFlows = () => {},\n  }: {\n    tag?: string;\n    context: T;\n    stopNestedFlows?: () => void;\n  }) => {\n    if (tag === undefined || tag === flowTag) {\n      Promise.resolve().then(() => {\n        dispatch({\n          type: `${prefix} ${FINISH_FLOW_ACTION_TYPE}`,\n          context,\n          id,\n        });\n      });\n\n      if (flowIsRunning$.getValue()[0] === id) {\n        flowIsRunning$.next(flowIsRunning$.getValue().slice(1));\n      }\n\n      finishFlow$.next();\n\n      stopNestedFlows();\n      return;\n    }\n\n    if (tag) {\n      finishParentFlow({\n        tag,\n        context,\n        stopNestedFlows: () => {\n          finishFlow$.next();\n          stopNestedFlows();\n        },\n      });\n    }\n  };\n\n  Promise.resolve().then(() => {\n    dispatch({\n      ...currentAction,\n      context,\n      id,\n      buildFlow: ({ context = {} as T, actions, flowTag }: { context?: T; actions: Action[]; flowTag: string }) => {\n        return buildNestedFlow({\n          relatedAction: currentAction,\n          context,\n          actions,\n          actions$,\n          dispatch,\n          prefix,\n          flowTag,\n          buildFlowFn: buildFlow,\n          finishParentFlow: finishFlow,\n          config,\n        }).pipe(map(({ context }) => context as T));\n      },\n      runRepeatedFlow: ({\n        actions,\n        flowTag,\n        context,\n        times,\n        conditionToRepeat,\n      }: {\n        context?: T;\n        actions: Action[];\n        flowTag: string;\n        times?: number;\n        conditionToRepeat?: ConditionObject;\n      }) => {\n        return buildNestedRepeatedFlow({\n          actions,\n          actions$,\n          dispatch,\n          prefix,\n          relatedAction: currentAction,\n          buildFlowFn: buildFlow,\n          flowTag,\n          context,\n          times,\n          conditionToRepeat,\n          finishParentFlow: finishFlow,\n          config,\n        });\n      },\n      finishFlow,\n    });\n  });\n\n  return actions$.pipe(\n    filter((action) => action.type === getEndActionForFlow(currentAction.type)),\n    filter((action) => action.id === id),\n    take(1),\n    tap(({ context }) => {\n      if (actions.length <= 1) {\n        finishFlow({ context });\n      }\n    }),\n    filter(() => actions.length > 1),\n    switchMap(({ context }) =>\n      buildFlow({\n        id,\n        actions: actions.slice(1),\n        actions$,\n        dispatch,\n        context,\n        prefix,\n        finishParentFlow,\n        flowTag,\n        config,\n      }),\n    ),\n    takeUntil(finishFlow$.pipe(take(1))),\n  );\n};\n\nexport const continueWhenFlowIsNotRunning = () =>\n  function <T>(source$: Observable<T>) {\n    return source$.pipe(\n      mergeMap((value: T) =>\n        flowIsRunning$.pipe(\n          filter((flows) => flows.length === 0 || flows[0] === (value as any)?.id),\n          take(1),\n          map(() => value),\n        ),\n      ),\n    );\n  };\n\nexport const createFlowRunner = <T>({\n  actions$,\n  dispatch,\n  prefix = '[FLOW]',\n  config,\n}: {\n  actions$: Observable<Action>;\n  dispatch: (_: Action) => void;\n  prefix?: string;\n  config?: {\n    data: Config;\n  };\n}): FlowRunner => {\n  const runFlowActionType = `${prefix} ${START_FLOW_ACTION_TYPE}`;\n  const endFlowActionType = `${prefix} ${FINISH_FLOW_ACTION_TYPE}`;\n  const runFlowInScope = `${prefix} ${RUN_FLOW_IN_SCOPE}`;\n  const runFlowInScopeEnd = `${prefix} ${RUN_FLOW_IN_SCOPE_END}`;\n  const runConditionalFlow = `${prefix} ${RUN_CONDITION_FLOW}`;\n  const runConditionalFlowEnd = `${prefix} ${RUN_CONDITION_FLOW_END}`;\n  const runRepeatedFlow = `${prefix} ${RUN_REPEATED_FLOW}`;\n  const runRepeatedFlowEnd = `${prefix} ${RUN_REPEATED_FLOW_END}`;\n  const forceFinishFlow = `${prefix} ${FORCE_FINISH_FLOW}`;\n  const forceFinishFlowEnd = `${prefix} ${FORCE_FINISH_FLOW_END}`;\n  const runDynamicAction = `${prefix} ${RUN_DYNAMIC_ACTION}`;\n  const runDynamicActionEnd = `${prefix} ${RUN_DYNAMIC_ACTION_END}`;\n\n  actions$\n    .pipe(\n      filter((action) => action.type === runFlowActionType),\n      tap(({ id }) => {\n        flowIsRunning$.next([...flowIsRunning$.getValue(), id]);\n      }),\n      continueWhenFlowIsNotRunning(),\n      switchMap(({ actions, context, id }) =>\n        buildFlow({\n          id,\n          actions,\n          actions$,\n          dispatch,\n          context,\n          prefix,\n          flowTag: '#main',\n          config,\n        }),\n      ),\n    )\n    .subscribe();\n\n  actions$\n    .pipe(\n      filter((action) => action.type === forceFinishFlow),\n      tap((action) => {\n        action.finishFlow({ tag: action.tag, context: action.context });\n\n        dispatch({\n          type: forceFinishFlowEnd,\n          context: action.context,\n          id: action.id,\n        });\n      }),\n    )\n    .subscribe();\n\n  actions$\n    .pipe(\n      filter((action) => action.type === runFlowInScope),\n      switchMap((action) => {\n        return buildNestedFlow<T>({\n          relatedAction: action,\n          actions: action.actions,\n          actions$,\n          context: action.context,\n          dispatch,\n          flowTag: action.flowTag,\n          prefix,\n          buildFlowFn: buildFlow,\n          finishParentFlow: action.finishFlow,\n          config,\n        });\n      }),\n      tap(({ context, id }) => {\n        dispatch({\n          type: runFlowInScopeEnd,\n          context,\n          id,\n        });\n      }),\n    )\n    .subscribe();\n\n  actions$\n    .pipe(\n      filter((action) => action.type === runDynamicAction),\n      tap((action) => {\n        const newContext = eval(action.code || 'action.context');\n\n        dispatch({\n          type: runDynamicActionEnd,\n          context: newContext,\n          id: action.id,\n        });\n      }),\n    )\n    .subscribe();\n\n  actions$\n    .pipe(\n      filter((action) => action.type === runConditionalFlow),\n      switchMap((action) => {\n        const actions = (action.conditions || []).find((obj) =>\n          validateCondition({\n            condition: typeof obj.condition !== 'string' ? obj.condition : config?.data?.conditionsMap?.[obj.condition],\n            globalContext: action.context,\n          }),\n        )?.actions;\n\n        if (!actions) {\n          return of(action);\n        }\n\n        return buildNestedFlow<T>({\n          relatedAction: action,\n          actions,\n          actions$,\n          context: action.context,\n          dispatch,\n          flowTag: action.flowTag,\n          prefix,\n          buildFlowFn: buildFlow,\n          finishParentFlow: action.finishFlow,\n          config,\n        });\n      }),\n      tap(({ context, id }) => {\n        dispatch({\n          type: runConditionalFlowEnd,\n          context,\n          id,\n        });\n      }),\n    )\n    .subscribe();\n\n  actions$\n    .pipe(\n      filter((action) => action.type === runRepeatedFlow),\n      switchMap((action) =>\n        buildNestedRepeatedFlow({\n          actions: action.actions,\n          actions$,\n          dispatch,\n          prefix,\n          relatedAction: action,\n          buildFlowFn: buildFlow,\n          flowTag: action.flowTag,\n          context: action.context,\n          times: action.times,\n          conditionToRepeat: action.conditionToRepeat,\n          finishParentFlow: action.finishFlow,\n          config,\n        }).pipe(\n          tap((context) => {\n            dispatch({\n              type: runRepeatedFlowEnd,\n              context,\n              id: action.id,\n            });\n          }),\n        ),\n      ),\n    )\n    .subscribe();\n\n  return ((actions: Action[], context: T = {} as T) => {\n    const flowId = generateId();\n\n    Promise.resolve().then(() => {\n      dispatch({\n        type: runFlowActionType,\n        id: flowId,\n        actions,\n        context,\n      });\n    });\n\n    return actions$.pipe(\n      filter((action) => action.type === endFlowActionType),\n      filter(({ id }) => id === flowId),\n      take(1),\n      map(({ context }) => context as T),\n    );\n  }) as FlowRunner;\n};\n"]}