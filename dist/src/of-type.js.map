{"version":3,"file":"of-type.js","sourceRoot":"","sources":["../../src/of-type.ts"],"names":[],"mappings":";;;AAAA,+BAA0C;AAGnC,MAAM,MAAM,GACjB,CAAiE,aAAwB,EAAE,EAAE,CAC7F,CAAC,OAAsB,EAA+B,EAAE,CACtD,OAAO,CAAC,IAAI,CACV,IAAA,aAAM,EAAC,CAAC,MAAc,EAA6B,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,aAAa,IAAI,MAAM,KAAK,aAAa,CAAC,CACjH,CAAC;AALO,QAAA,MAAM,UAKb","sourcesContent":["import { filter, Observable } from 'rxjs';\nimport { Action } from './interfaces';\n\nexport const ofType =\n  <F extends Action, T extends F['type'], E extends (_: any) => F>(typeToCompare: T | F | E) =>\n  (source$: Observable<F>): Observable<F & { type: T }> =>\n    source$.pipe(\n      filter((action: Action): action is F & { type: T } => action.type === typeToCompare || action === typeToCompare),\n    );\n"]}